@startuml
skinparam classAttributeIconSize 0

class AddAvailability {
    - calendar: CalendarView
    - startTimeButton: Button
    - startTimeText: TextView
    - endTimeButton: Button
    - endTimeText: TextView
    - save: Button
    - selectedDate: GregorianCalendar
    - startTime: LocalTime?
    - endTime: LocalTime?
    - selectTime(isStartTime: Boolean)
}

class AddPet {
    - petName: EditText
    - petType: EditText
    - petAge: EditText
    - petGender: EditText
    - next: Button
}

class FindVet {
    - vetsList: LinearLayout
    - fusedLocationProvider: FusedLocationProviderClient
    - getVets()
    - requestLocationPermission()
    - checkLocationPermission()
    - updateUIWithData(snapshot: MutableList<DocumentSnapshot>)
    - onRequestPermissionsResult(requestCode: Int, permissions: Array<String>, grantResults: IntArray)
}

class FirebaseCloudMessagingService {
    + onNewToken(token: String)
    - sendTokenToFirestore(token: String)
    + onMessageReceived(message: RemoteMessage)
    - handleDataMessage(data: Map<String, String>)
    - displayNotification(title: String?, messageBody: String?)
}

class MainActivity {
    - signInLauncher: ActivityResultLauncher<Intent>?
    - requestPermissionLauncher: ActivityResultLauncher<String>
    - askNotificationPermission()
    - authFlow()
    - goHome(auth: FirebaseAuth)
    - handleSignInResult(result: FirebaseAuthUIAuthenticationResult)
}

class MakeAppointment {
    - vetId: String
    - vetTitle: TextView
    - calendarView: CalendarView
    - appointmentList: LinearLayout
    - makeAppointment(date: LocalDate, time: LocalTime)
    - displayAvailabilityWindows(date: LocalDate, windows: QuerySnapshot)
    - queryAvailabilityWindows(date: LocalDate)
}

class OwnerSignUp {
    - address: EditText
    - register: Button
    - errorMessage: TextView
}

class PetOwnerWindow {
    - appointmentsListener: ListenerRegistration
    - updateDetails: Button
    - logOut: Button
    - deleteAccount: Button
    - findVet: Button
    - appointmentsList: LinearLayout
    - petDetails: LinearLayout
    - petName: TextView
    - petImage: ImageView
    - showAppointments(appointments: MutableList<Pair<DocumentSnapshot, String>>)
    - openGallery()
    - galleryActivityResultLauncher: ActivityResultLauncher<Intent>
    - loadImageIntoView(imageUrl: String)
}

class SignUp {
    - petBtn: ImageView
    - vetBtn: ImageView
    - cancelBtn: Button
}

class UpdatePetDetails {
    - petWeight: EditText
    - medicalHistory: EditText
    - updateDetails: Button
}

class UpdateVetDetails {
    - expertise: EditText
    - aboutMe: EditText
    - erorrMessage: TextView
    - updateDetails: Button
}

class VeterinarianSignUp {
    - clinicName: EditText
    - clinicLocation: EditText
    - yearsOfExperience: EditText
    - next: Button
    - errorMessage: TextView
}

class VeterinarianSignUpContinuation {
    - expertise: EditText
    - aboutMe: EditText
    - register: Button
    - errorMessage: TextView
}

class VetWindow {
    - appointmentsListener: ListenerRegistration
    - availabilityWindowsListener: ListenerRegistration
    - clinicNameTitle: TextView
    - clinicAddressTitle: TextView
    - logOut: Button
    - deleteAccount: Button
    - addAvailability: Button
    - availabilityWindowsList: LinearLayout
    - appointmentsList: LinearLayout
    - updateVetDetails: Button
    - updateAppointments(snapshot: MutableList<Pair<DocumentSnapshot, String>>)
    - updateAvailabilityWindows(snapshot: QuerySnapshot)
}

MainActivity *--> PetOwnerWindow
MainActivity *--> VetWindow
VetWindow o--> AddAvailability
OwnerSignUp --> PetOwnerWindow
FindVet --> MakeAppointment
MainActivity --> OwnerSignUp
MainActivity --> VeterinarianSignUp

@enduml